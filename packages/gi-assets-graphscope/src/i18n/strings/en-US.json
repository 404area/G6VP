{
  "graphscope.components.ExecAlgorithmPanel.AlgorithmResultPanel.NodeId": "Node ID",
  "graphscope.components.ExecAlgorithmPanel.AlgorithmResultPanel.Result": "Result",
  "graphscope.components.ExecAlgorithmPanel.AlgorithmResultPanel.AlgorithmtypeAlgorithmResultPanel": "{algorithmType} algorithm result panel",
  "graphscope.components.ExecAlgorithmPanel.Component.AlgorithmParameters": "Algorithm parameters",
  "graphscope.components.ExecAlgorithmPanel.Component.GremlinAlgorithmResults": "Gremlin algorithm results",
  "graphscope.components.ExecAlgorithmPanel.Component.FailedToExecuteTheGraph": "Failed to execute the graph algorithm:{resultMessage}",
  "graphscope.components.ExecAlgorithmPanel.Component.AlgorithmType": "Algorithm type",
  "graphscope.components.ExecAlgorithmPanel.Component.SelectAnAlgorithm": "Select an algorithm",
  "graphscope.components.ExecAlgorithmPanel.Component.SingleSourceShortestPath": "Single source shortest path",
  "graphscope.components.ExecAlgorithmPanel.Component.NodeType": "Node type",
  "graphscope.components.ExecAlgorithmPanel.Component.EdgeType": "Edge type",
  "graphscope.components.ExecAlgorithmPanel.Component.Weight": "Weight",
  "graphscope.components.ExecAlgorithmPanel.Component.SourceNodeId": "SOURCE node ID",
  "graphscope.components.ExecAlgorithmPanel.Component.LimitedQuantity": "Limited Quantity",
  "graphscope.components.ExecAlgorithmPanel.Component.WhetherToSortById": "Whether to sort by ID",
  "graphscope.components.ExecAlgorithmPanel.Component.AppendFieldName": "Append field name",
  "graphscope.components.ExecAlgorithmPanel.Component.ExecutionAlgorithm": "Execution algorithm",
  "graphscope.components.ExecAlgorithmPanel.info.AlgorithmAnalysisPanel": "Algorithm analysis panel",
  "graphscope.components.ExecAlgorithmPanel.info.CallGraphscopeGraphAlgorithmTo": "Call GraphScope graph algorithm to analyze data",
  "graphscope.components.ExecAlgorithmPanel.registerMeta.AlgorithmType": "Algorithm type",
  "graphscope.components.ExecAlgorithmPanel.registerMeta.SingleSourceShortestPath": "Single source shortest path",
  "graphscope.components.ExecAlgorithmPanel.registerMeta.Weight": "Weight",
  "graphscope.components.ExecAlgorithmPanel.registerMeta.StartPointId": "Start point ID",
  "graphscope.components.ExecAlgorithmPanel.registerMeta.LimitedQuantity": "Limited Quantity",
  "graphscope.components.ExecAlgorithmPanel.registerMeta.WhetherToSortById": "Whether to sort by ID",
  "graphscope.components.ExecAlgorithmPanel.registerMeta.DataService": "Data Service",
  "graphscope.components.ServerComponent.Connect.ConnectionToGraphscopeDataSource": "Connection to GraphScope data source succeeded",
  "graphscope.components.ServerComponent.Connect.ContinueToSelectSubgraphsAnd": "Continue to select subgraphs and enter analysis.",
  "graphscope.components.ServerComponent.Connect.FailedToConnectToGraphscope": "Failed to connect to GraphScope database",
  "graphscope.components.ServerComponent.Connect.CheckWhetherTheAntvisGi": "✅Check whether the antvis/gi-httpservice image is started.",
  "graphscope.components.ServerComponent.Connect.CheckWhetherTheGraphscopeDatabase": "✅Check whether the GraphScope database address, account, and password are correct.",
  "graphscope.components.ServerComponent.Connect.Reconnect": "Reconnect",
  "graphscope.components.ServerComponent.Connect.StartConnection": "Start connection",
  "graphscope.components.ServerComponent.Connect.ConnectToADatabase": "Connect to a database",
  "graphscope.components.ServerComponent.Connect.ConnectingToGraphscopeDatabasePlease": "Connecting to GraphScope database, please wait patiently......",
  "graphscope.components.ServerComponent.Connect.PlatformAddress": "Platform address",
  "graphscope.components.ServerComponent.Connect.ThePlatformServiceAddressIs": "The platform service address is required!",
  "graphscope.components.ServerComponent.Connect.EnterGiHttpserviceAddress": "Enter gi-httpservice address",
  "graphscope.components.ServerComponent.Connect.EngineAddress": "Engine address",
  "graphscope.components.ServerComponent.Connect.TheDatabaseAddressIsRequired": "The database address is required!",
  "graphscope.components.ServerComponent.Connect.EnterTheDatabaseAddressIn": "Enter the database address in the format of ip:port.",
  "graphscope.components.ServerComponent.LoadGraph.FailedToQuerySubgraphList": "Failed to query Subgraph List",
  "graphscope.components.ServerComponent.LoadGraph.QueryFailedResultmessage": "Query failed:{resultMessage}",
  "graphscope.components.ServerComponent.LoadGraph.TheQueryIsSuccessfulThe": "The query is successful. The Subgraph List is empty.",
  "graphscope.components.ServerComponent.LoadGraph.QuerySucceededResultmessage": "Query succeeded:{resultMessage}",
  "graphscope.components.ServerComponent.LoadGraph.SelectSubgraph": "Select subgraph",
  "graphscope.components.ServerComponent.LoadGraph.PleaseSelectASubgraph": "Please select a subgraph",
  "graphscope.components.ServerComponent.LoadGraph.PleaseSelectASubgraph.1": "Please select a subgraph!",
  "graphscope.components.ServerComponent.LoadGraph.SelectASubgraphToQuery": "Select a subgraph to query",
  "graphscope.components.ServerComponent.LoadGraph.DataName": "Data name",
  "graphscope.components.ServerComponent.LoadGraph.EnterADataName": "Enter a data name!",
  "graphscope.components.ServerComponent.LoadGraph.NameTheDataset": "Name the dataset",
  "graphscope.components.ServerComponent.LoadGraph.EnterAnalysis": "Enter analysis",
  "graphscope.components.ServerComponent.LargeScaleGraphComputingSystem": "Large-scale graph computing system",
  "graphscope.components.ServerComponent.GraphscopeIsAnOpenSource": "GraphScope is an open-source one-stop graph computing platform developed by Alibaba DAMO Academy Intelligent Computing Laboratory. Relying on Alibaba's massive data and rich scenarios and high-level research with Damo Academy, GraphScope is committed to providing one-stop and efficient solutions to the challenges of Graph Computing in actual production scenarios.",
  "graphscope.src.services.ElementProperties.QueryElementAttributes": "Query element attributes",
  "graphscope.src.services.ExecAlgorithm.ExecuteGraphscopeGraphAlgorithm": "Execute GraphScope graph algorithm",
  "graphscope.src.services.GremlinQuery.GremlinQuery": "Gremlin query",
  "graphscope.src.services.Initializer.InitializeAQuery": "Initialize a query",
  "graphscope.src.services.Initializer.QueryGraphModel": "Query graph model",
  "graphscope.src.services.NeighborsQuery.NeighborQuery": "Neighbor query",
  "graphscope.src.services.GraphscopeStandaloneEngineService": "GraphScope standalone engine service",
  "graphscope.src.services.TheStandaloneComputingEngineLaunched": "The standalone computing engine launched by the GraphScope team. Includes asset modules such as O & M Management, cluster management, data management, and deployment overview.",
  "graphscope.src.services.GraphscopeTeam": "GraphScope team"
}
